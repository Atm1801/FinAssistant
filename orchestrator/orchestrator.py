# orchestrator/orchestrator.py
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import requests
from config.settings import settings
import uvicorn

# Import the request model from your models file
from orchestrator.models import LanguageAgentRequest

app = FastAPI()

# --- Orchestration Endpoint ---
@app.post("/orchestrate/generate_brief/") # <--- ENSURE THIS ENDPOINT IS CORRECT
async def generate_brief_endpoint(request: LanguageAgentRequest):
    """
    Orchestrates the process of generating a market brief by calling the Language Agent.
    """
    print("---ORCHESTRATOR: Received request to generate brief---")
    try:
        # Call the Language Agent's generate_brief endpoint
        language_agent_url = f"http://localhost:{settings.LANGUAGE_AGENT_PORT}/language/generate_brief/"
        
        # Pass the entire request body received by the orchestrator directly to the language agent
        response = requests.post(language_agent_url, json=request.dict())
        response.raise_for_status() # Raise an exception for HTTP errors (4xx or 5xx)
        
        brief_data = response.json()
        print("---ORCHESTRATOR: Successfully received brief from Language Agent---")
        return brief_data # Return the brief generated by the Language Agent

    except requests.exceptions.ConnectionError:
        print(f"Error: Could not connect to Language Agent at {language_agent_url}")
        raise HTTPException(status_code=503, detail="Service Unavailable: Language Agent is not reachable.")
    except requests.exceptions.HTTPError as e:
        status_code = e.response.status_code if e.response else 500
        detail = e.response.json().get('detail', 'No additional detail from Language Agent.') if e.response else str(e)
        print(f"Error from Language Agent ({status_code}): {detail}")
        raise HTTPException(status_code=status_code, detail=f"Error from Language Agent: {detail}")
    except Exception as e:
        print(f"Unhandled error in orchestrator: {e}")
        raise HTTPException(status_code=500, detail=f"Internal Server Error in Orchestrator: {e}")

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=settings.ORCHESTRATOR_PORT)